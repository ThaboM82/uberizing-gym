{"ast":null,"code":"var _jsxFileName = \"/jobs-portal/src/containers/Home/index.tsx\";\nimport React from 'react';\nimport { Container, Row, Col, Jumbotron, CardGroup, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { fetchJobs, searchJobs, fetchCategories } from '../../actions';\nimport Loading from '../../components/Loading';\nimport JumbotronTitle from '../../components/JumbotronTitle';\nimport JumbotronSubtitle from '../../components/JumbotronSubtitle';\nimport SearchBar from '../../components/SearchBar';\nimport CategoryItem from '../../components/CategoryItem';\nimport { NavLink } from 'react-router-dom';\nimport Storage from '../../storage';\nimport JobsView from '../../components/JobsView';\nimport NavigationBar from '../../components/NavigationBar';\nimport { CurrentUserUtils } from '../../utils';\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderCategories = categories => {\n      return categories.map((category, index) => {\n        return index < 4 ? React.createElement(CategoryItem, Object.assign({}, category, {\n          key: category.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })) : undefined;\n      });\n    };\n\n    this.clearSearchResult = () => {\n      const storage = new Storage();\n      storage.clearSearchKeywords();\n    };\n\n    this.logout = () => {\n      CurrentUserUtils.removeCurrentUser();\n      window.location.reload();\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchJobs();\n    this.props.fetchCategories();\n  }\n\n  render() {\n    const _this$props = this.props,\n          searchJobs = _this$props.searchJobs,\n          history = _this$props.history;\n    const latestJobs = this.props.jobs.jobs;\n    const isLoading = this.props.jobs.pending;\n    const categories = this.props.categories.categories;\n    console.log(this.props);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(NavigationBar, Object.assign({}, this.props.token.token, {\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Jumbotron, {\n      className: \"main-jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(JumbotronTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(JumbotronSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      searchJobs: searchJobs,\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 12,\n      className: \"section-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"section-header__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Explore\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \"by \", React.createElement(\"span\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"category\")))))), React.createElement(Col, {\n      lg: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CardGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.renderCategories(categories))))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 12,\n      className: \"section-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"section-header__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Latest\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"u\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"jobs\")), \" Listings\")), React.createElement(Col, {\n      lg: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      as: NavLink,\n      to: \"/jobs\",\n      className: \"section-header__button\",\n      size: \"lg\",\n      onClick: this.clearSearchResult,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"List all jobs\")))), React.createElement(Col, {\n      lg: 12,\n      className: isLoading ? 'text-center' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(CardGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, isLoading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }) : React.createElement(JobsView, {\n      jobs: latestJobs,\n      isListView: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  jobs: state.jobs,\n  categories: state.categories,\n  token: state.token\n});\n\nexport default connect(mapStateToProps, {\n  fetchJobs,\n  searchJobs,\n  fetchCategories\n})(Home);","map":{"version":3,"sources":["/jobs-portal/src/containers/Home/index.tsx"],"names":["React","Container","Row","Col","Jumbotron","CardGroup","Button","connect","fetchJobs","searchJobs","fetchCategories","Loading","JumbotronTitle","JumbotronSubtitle","SearchBar","CategoryItem","NavLink","Storage","JobsView","NavigationBar","CurrentUserUtils","Home","Component","renderCategories","categories","map","category","index","id","undefined","clearSearchResult","storage","clearSearchKeywords","logout","removeCurrentUser","window","location","reload","componentDidMount","props","render","history","latestJobs","jobs","isLoading","pending","console","log","token","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n    Jumbotron,\n    CardGroup,\n    Button,\n} from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { fetchJobs, searchJobs, fetchCategories } from '../../actions';\nimport { JobsState, CategoriesState } from '../../models/States';\nimport Job from '../../models/Job';\nimport Loading from '../../components/Loading';\nimport JumbotronTitle from '../../components/JumbotronTitle';\nimport JumbotronSubtitle from '../../components/JumbotronSubtitle';\nimport SearchBar from '../../components/SearchBar';\nimport Category from '../../models/Category';\nimport CategoryItem from '../../components/CategoryItem';\nimport { NavLink } from 'react-router-dom';\nimport Storage from '../../storage';\nimport JobsView from '../../components/JobsView';\nimport NavigationBar from '../../components/NavigationBar';\nimport { CurrentUserState } from '../../reducers/auth';\nimport { CurrentUserUtils } from '../../utils';\n\ninterface HomePropos {\n    jobs: JobsState;\n    fetchJobs: Function;\n    searchJobs: Function;\n    fetchCategories: Function;\n    categories: CategoriesState;\n    history: any;\n    token: CurrentUserState;\n}\n\ninterface HomeState {\n    jobs: JobsState;\n    categories: CategoriesState;\n    token: CurrentUserState;\n}\n\nclass Home extends React.Component<HomePropos, {}> {\n    componentDidMount() {\n        this.props.fetchJobs();\n        this.props.fetchCategories();\n    }\n\n    renderCategories = (categories: Category[]) => {\n        return categories.map((category, index) => {\n            return (index < 4) ? <CategoryItem {...category} key={category.id} /> : undefined;\n        })\n    }\n\n    clearSearchResult = () => {\n        const storage = new Storage();\n        storage.clearSearchKeywords();\n    }\n\n    logout = () => {\n        CurrentUserUtils.removeCurrentUser();\n        window.location.reload();\n    }\n\n    render() {\n        const { searchJobs, history } = this.props;\n        const latestJobs: Job[] = this.props.jobs.jobs;\n        const isLoading: boolean = this.props.jobs.pending;\n        const categories: Category[] = this.props.categories.categories;\n        console.log(this.props);\n        return (\n            <React.Fragment>\n                <NavigationBar {...this.props.token.token} logout={this.logout} />\n                <Jumbotron className=\"main-jumbotron\">\n                    <Container>\n                        <JumbotronTitle />\n                        <JumbotronSubtitle />\n                        <SearchBar searchJobs={searchJobs} history={history} />\n                    </Container>\n                </Jumbotron>\n                <Container>\n                    <Row>\n                        <Col lg={12} className=\"section-header\">\n                            <Row>\n                                <Col lg={12}>\n                                    <h1 className=\"section-header__title\">\n                                        Explore<br />by <span className=\"text-primary\"><u>category</u></span>\n                                    </h1>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col lg={12}>\n                            <CardGroup>\n                                {this.renderCategories(categories)}\n                            </CardGroup>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                    <Row>\n                        <Col lg={12}  className=\"section-header\">\n                            <Row>\n                                <Col lg={10}>\n                                    <h1 className=\"section-header__title\">\n                                        Latest<br /><span className=\"text-primary\"><u>jobs</u></span> Listings\n                                    </h1>\n                                </Col>\n                                <Col lg={2}>\n                                    <Button as={NavLink} to=\"/jobs\" className=\"section-header__button\" size=\"lg\" onClick={this.clearSearchResult}>List all jobs</Button>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col lg={12} className={(isLoading ? 'text-center' : '')}>\n                            <CardGroup>\n                                {isLoading ? (\n                                    <Loading />\n                                ) : (\n                                    <JobsView jobs={latestJobs} isListView={false} />\n                                )}\n                            </CardGroup>\n                        </Col>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state: HomeState) => ({\n    jobs: state.jobs,\n    categories: state.categories,\n    token: state.token,\n})\n\nexport default connect(mapStateToProps, {fetchJobs, searchJobs, fetchCategories})(Home);\n"]},"metadata":{},"sourceType":"module"}