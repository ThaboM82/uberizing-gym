{"ast":null,"code":"var _jsxFileName = \"/app/src/containers/FindGyms/index.tsx\";\nimport React from 'react';\nimport { Container, Col, Form, FormGroup, InputGroup, Button, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt, faThList } from '@fortawesome/free-solid-svg-icons';\nimport Map from '../Map';\nimport '../../utils/Style.scss';\n\nclass FindGyms extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      map: true\n    };\n\n    this.handleInputChange = event => {};\n\n    this.toggleView = map => {\n      if (this.state.map !== map) {\n        this.setState({\n          map\n        });\n      }\n    };\n\n    this.onSearch = event => {};\n\n    this.onPinClick = gym => {};\n  }\n\n  render() {\n    const map = this.state.map;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Keyword e.g. gym name\",\n      name: \"keywords\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Location\",\n      name: \"location\",\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"submit-button\",\n      onClick: this.onSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Search\"))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Distance\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 1,\n      className: \"maplist-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Nav.Item, {\n      onClick: () => this.toggleView(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"icon\",\n      icon: faMapMarkerAlt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Nav.Item, {\n      onClick: () => this.toggleView(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"icon\",\n      icon: faThList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })))))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, map && React.createElement(Map, {\n      onPinClick: this.onPinClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), !map && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"list\"))));\n  }\n\n}\n\nexport default FindGyms;","map":{"version":3,"sources":["/app/src/containers/FindGyms/index.tsx"],"names":["React","Container","Col","Form","FormGroup","InputGroup","Button","Nav","FontAwesomeIcon","faMapMarkerAlt","faThList","Map","FindGyms","Component","state","map","handleInputChange","event","toggleView","setState","onSearch","onPinClick","gym","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Col, Form, FormGroup, InputGroup, Button, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarkerAlt, faThList } from '@fortawesome/free-solid-svg-icons';\nimport { CurrentUserState } from '../../reducers/auth';\nimport Map from '../Map';\nimport '../../utils/Style.scss';\n\ninterface FGProps {\n  currentUser?: CurrentUserState;\n}\n\ninterface FGState {\n    currentUser?: CurrentUserState;\n    map: Boolean;\n}\n\nclass FindGyms extends React.Component<FGProps, FGState> {\n    state = {\n        map: true\n    };\n\n    handleInputChange = (event: any) => {\n\n    }\n\n    toggleView = (map: boolean) => {\n        if (this.state.map !== map) {\n            this.setState({ map });\n        }\n    }\n\n    onSearch = (event: any) => {\n\n    }\n\n    onPinClick = (gym: any) => {\n\n    }\n\n    render() {\n        const map = this.state.map;\n        return (\n            <Container>\n                <Form.Row>\n                    <Col>\n                        <FormGroup>\n                            <InputGroup>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder='Keyword e.g. gym name'\n                                    name='keywords'\n                                    onChange={this.handleInputChange}\n                                />\n                            </InputGroup>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup>\n                            <InputGroup>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder='Location'\n                                    name='location'\n                                    onChange={this.handleInputChange}\n                                />\n                            </InputGroup>\n                        </FormGroup>\n                    </Col>\n                    <Col md={2}>\n                        <Button className=\"submit-button\" onClick={this.onSearch}>Search</Button>\n                    </Col>\n                </Form.Row>\n                <Form.Row>\n                    <Col>\n                        <b>Distance</b>\n                        <FormGroup>\n                            <InputGroup>\n\n                            </InputGroup>\n                        </FormGroup>\n                    </Col>\n                    <Col md={1} className=\"maplist-buttons\">\n                        <Form.Row>\n                            <Col>\n                                <Nav.Item onClick={()=> this.toggleView(true)}>\n                                    <FontAwesomeIcon className=\"icon\" icon={faMapMarkerAlt} />\n                                </Nav.Item>\n                            </Col>\n                            <Col>\n                                <Nav.Item onClick={()=> this.toggleView(false)}>\n                                    <FontAwesomeIcon className=\"icon\" icon={faThList} />\n                                </Nav.Item>\n                            </Col>\n                        </Form.Row>\n                    </Col>\n                </Form.Row>\n                <Form.Row>\n                    <Col>\n                        {map &&\n                            <Map onPinClick={this.onPinClick} />\n                        }\n                        {!map &&\n                            <div>list</div>\n                        }\n                    </Col>\n                </Form.Row>\n            </Container>\n        )\n    }\n}\n\nexport default FindGyms;\n"]},"metadata":{},"sourceType":"module"}