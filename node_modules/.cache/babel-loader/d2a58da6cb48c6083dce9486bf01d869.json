{"ast":null,"code":"var _jsxFileName = \"/jobs-portal/src/containers/Search/index.tsx\";\nimport React from 'react';\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Loading from '../../components/Loading';\nimport SearchBar from '../../components/SearchBar';\nimport { searchJobs } from '../../actions';\nimport NoJobsFound from '../../components/NoJobsFound';\nimport JobsView from '../../components/JobsView';\n\nclass Search extends React.Component {\n  render() {\n    const jobsSearchResult = this.props.jobsSearchResult.jobs;\n    const _this$props = this.props,\n          searchJobs = _this$props.searchJobs,\n          history = _this$props.history;\n    const isLoading = this.props.jobsSearchResult.pending;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      className: \"search-jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      searchJobs: searchJobs,\n      history: history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"search-result \".concat(isLoading ? 'text-center' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, isLoading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }) : jobsSearchResult.length > 0 ? React.createElement(JobsView, {\n      jobs: jobsSearchResult,\n      isListView: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }) : React.createElement(NoJobsFound, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  jobsSearchResult: state.jobsSearchResult\n});\n\nexport default connect(mapStateToProps, {\n  searchJobs\n})(Search);","map":{"version":3,"sources":["/jobs-portal/src/containers/Search/index.tsx"],"names":["React","Container","Row","Col","Jumbotron","connect","Loading","SearchBar","searchJobs","NoJobsFound","JobsView","Search","Component","render","jobsSearchResult","props","jobs","history","isLoading","pending","length","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,SAA9B,QAA+C,iBAA/C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAYA,MAAMC,MAAN,SAAqBX,KAAK,CAACY,SAA3B,CAA+D;AAC3DC,EAAAA,MAAM,GAAG;AACL,UAAMC,gBAAgB,GAAG,KAAKC,KAAL,CAAWD,gBAAX,CAA4BE,IAArD;AADK,wBAE2B,KAAKD,KAFhC;AAAA,UAEGP,UAFH,eAEGA,UAFH;AAAA,UAEeS,OAFf,eAEeA,OAFf;AAGL,UAAMC,SAAkB,GAAG,KAAKH,KAAL,CAAWD,gBAAX,CAA4BK,OAAvD;AACA,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAEX,UAAvB;AAAmC,MAAA,OAAO,EAAES,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,EAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,SAAS,0BAAmBC,SAAS,GAAG,aAAH,GAAmB,EAA/C,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,SAAS,GACN,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,GAGNJ,gBAAgB,CAACM,MAAjB,GAA0B,CAA1B,GAA8B,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEN,gBAAhB;AAAkC,MAAA,UAAU,EAAE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,GACM,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALd,CADJ,CADJ,CANJ,CADJ;AAqBH;;AA1B0D;;AA6B/D,MAAMO,eAAe,GAAIC,KAAD,KAAyB;AAC7CR,EAAAA,gBAAgB,EAAEQ,KAAK,CAACR;AADqB,CAAzB,CAAxB;;AAIA,eAAeT,OAAO,CAACgB,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAAuCG,MAAvC,CAAf","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { JobsState } from '../../models/States';\nimport Loading from '../../components/Loading';\nimport SearchBar from '../../components/SearchBar';\nimport { searchJobs } from '../../actions';\nimport NoJobsFound from '../../components/NoJobsFound';\nimport JobsView from '../../components/JobsView';\n\ninterface SearchProps {\n    jobsSearchResult: JobsState;\n    searchJobs: Function;\n    history: any;\n}\n\ninterface SearchState {\n    jobsSearchResult: JobsState;\n}\n\nclass Search extends React.Component<SearchProps, SearchState> {\n    render() {\n        const jobsSearchResult = this.props.jobsSearchResult.jobs;\n        const { searchJobs, history } = this.props;\n        const isLoading: boolean = this.props.jobsSearchResult.pending;\n        return(\n            <React.Fragment>\n                <Jumbotron className=\"search-jumbotron\">\n                    <Container>\n                        <SearchBar searchJobs={searchJobs} history={history} />\n                    </Container>\n                </Jumbotron>\n                <Container>\n                    <Row>\n                        <Col className={`search-result ${isLoading ? 'text-center' : ''}`}>\n                            {isLoading ? (\n                                <Loading />\n                            ) : (\n                                jobsSearchResult.length > 0 ? <JobsView jobs={jobsSearchResult} isListView={true} />\n                                    : <NoJobsFound />\n                            )}\n                        </Col>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state: SearchState) => ({\n    jobsSearchResult: state.jobsSearchResult\n})\n\nexport default connect(mapStateToProps, {searchJobs})(Search);\n"]},"metadata":{},"sourceType":"module"}