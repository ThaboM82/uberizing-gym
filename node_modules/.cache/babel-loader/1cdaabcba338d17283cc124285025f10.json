{"ast":null,"code":"var _jsxFileName = \"/jobs-portal/src/components/SearchBar/index.tsx\";\nimport React from 'react';\nimport { Col, Button, Form } from 'react-bootstrap';\nimport SBInput from '../SBInput';\nimport Storage from '../../storage';\nimport { faSearch, faBuilding } from '@fortawesome/free-solid-svg-icons';\n\nclass SearchBar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.storage = new Storage();\n    this.keywords = this.storage.getSearchKeywords();\n    this.state = {\n      what: this.keywords ? this.keywords.what : '',\n      where: this.keywords ? this.keywords.where : ''\n    };\n\n    this.handleChange = e => {\n      const _e$currentTarget = e.currentTarget,\n            name = _e$currentTarget.name,\n            value = _e$currentTarget.value;\n      this.setState({\n        [name]: value\n      }, () => {});\n    };\n\n    this.handleSubmit = e => {\n      this.storage.addSearchKeyword(this.state);\n      this.props.searchJobs();\n      e.preventDefault();\n\n      if (this.props.history.location.pathname !== '/jobs') {\n        this.props.history.push('/jobs');\n      }\n    };\n\n    this.clearSearch = () => {\n      this.storage.clearSearchKeywords();\n      window.location.reload(false);\n    };\n  }\n\n  componentDidMount() {\n    this.props.searchJobs();\n  }\n\n  render() {\n    const keywords = this.storage.getSearchKeywords();\n    return React.createElement(\"div\", {\n      className: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(SBInput, {\n      colSize: 5,\n      isDivider: true,\n      icon: faSearch,\n      placeholder: \"Job title or keyword\",\n      name: \"what\",\n      defaultValue: keywords ? keywords.what : '',\n      onChangeFunc: this.handleChange,\n      inputSize: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(SBInput, {\n      colSize: 5,\n      icon: faBuilding,\n      placeholder: \"Location or company\",\n      name: \"where\",\n      defaultValue: keywords ? keywords.where : '',\n      onChangeFunc: this.handleChange,\n      inputSize: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Col, {\n      lg: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"search-bar__search-btn\",\n      variant: \"primary\",\n      size: \"lg\",\n      type: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Search\")))));\n  }\n\n}\n\nexport default SearchBar;","map":{"version":3,"sources":["/jobs-portal/src/components/SearchBar/index.tsx"],"names":["React","Col","Button","Form","SBInput","Storage","faSearch","faBuilding","SearchBar","Component","storage","keywords","getSearchKeywords","state","what","where","handleChange","e","currentTarget","name","value","setState","handleSubmit","addSearchKeyword","props","searchJobs","preventDefault","history","location","pathname","push","clearSearch","clearSearchKeywords","window","reload","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Col,\n    Button,\n    Form\n} from 'react-bootstrap';\nimport SBInput from '../SBInput';\nimport Storage from '../../storage';\nimport { faSearch, faBuilding } from '@fortawesome/free-solid-svg-icons';\n\ninterface SPropos {\n    searchJobs: Function;\n    history: any;\n}\n\ninterface SState {\n    what: string;\n    where: string;\n}\n\nclass SearchBar extends React.Component<SPropos, SState> {\n    storage = new Storage();\n    keywords = this.storage.getSearchKeywords();\n    state: SState = {\n        what: this.keywords ? this.keywords.what : '',\n        where: this.keywords ? this.keywords.where : ''\n    }\n\n    componentDidMount() {\n        this.props.searchJobs();\n    }\n\n    handleChange = (e: any) => {\n        const {name, value} = e.currentTarget;\n        this.setState({[name]: value} as SState, () => {});\n    }\n\n    handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        this.storage.addSearchKeyword(this.state);\n        this.props.searchJobs();\n        e.preventDefault();\n\n        if (this.props.history.location.pathname !== '/jobs') {\n            this.props.history.push('/jobs');\n        }\n    }\n\n    clearSearch = (): void => {\n        this.storage.clearSearchKeywords();\n        window.location.reload(false);\n    }\n\n    render() {\n        const keywords = this.storage.getSearchKeywords();\n        return (\n            <div className='search-bar'>\n                <Form onSubmit={this.handleSubmit} noValidate>\n                    <Form.Row>\n                        <SBInput\n                            colSize={5}\n                            isDivider={true}\n                            icon={faSearch}\n                            placeholder='Job title or keyword'\n                            name='what'\n                            defaultValue={keywords ? keywords.what : ''}\n                            onChangeFunc={this.handleChange}\n                            inputSize='lg'\n                        />\n                        <SBInput\n                            colSize={5}\n                            icon={faBuilding}\n                            placeholder='Location or company'\n                            name='where'\n                            defaultValue={keywords ? keywords.where : ''}\n                            onChangeFunc={this.handleChange}\n                            inputSize='lg'\n                        />\n                        <Col lg={2}>\n                            {/* <Button variant=\"secondary\" size='lg' className=\"btn-space\" onClick={this.clearSearch}>Clear</Button> */}\n                            <Button\n                                className=\"search-bar__search-btn\"\n                                variant=\"primary\"\n                                size='lg'\n                                type=\"submit\"\n                                block\n                            >Search</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}