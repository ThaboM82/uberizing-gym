{"ast":null,"code":"import _defineProperty from \"/jobs-portal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CategoriesActionTypes } from '../../actions';\nexport const initialState = {\n  pending: false,\n  categories: [],\n  error: ''\n};\nexport const categoriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CategoriesActionTypes.FETCH_CATEGORIES_PENDING:\n      return _objectSpread({}, state, {\n        pending: true\n      });\n\n    case CategoriesActionTypes.FETCH_CATEGORIES_SUCCESS:\n      return _objectSpread({}, state, {\n        pending: false,\n        categories: action.payload\n      });\n\n    case CategoriesActionTypes.FETCH_CATEGORIES_ERROR:\n      return _objectSpread({}, state, {\n        pending: false,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/jobs-portal/src/reducers/categories/index.tsx"],"names":["CategoriesActionTypes","initialState","pending","categories","error","categoriesReducer","state","action","type","FETCH_CATEGORIES_PENDING","FETCH_CATEGORIES_SUCCESS","payload","FETCH_CATEGORIES_ERROR"],"mappings":";;;;;;AAAA,SAASA,qBAAT,QAAsC,eAAtC;AAUA,OAAO,MAAMC,YAA6B,GAAG;AACzCC,EAAAA,OAAO,EAAE,KADgC;AAEzCC,EAAAA,UAAU,EAAE,EAF6B;AAGzCC,EAAAA,KAAK,EAAE;AAHkC,CAAtC;AAMP,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAoD;AACjF,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,qBAAqB,CAACS,wBAA3B;AACI,+BACOH,KADP;AAEIJ,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKF,qBAAqB,CAACU,wBAA3B;AACI,+BACOJ,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,UAAU,EAAEI,MAAM,CAACI;AAHvB;;AAKJ,SAAKX,qBAAqB,CAACY,sBAA3B;AACI,+BACON,KADP;AAEIJ,QAAAA,OAAO,EAAE,KAFb;AAGIE,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHlB;;AAKJ;AACI,aAAOE,KAAP;AAnBR;AAqBH,CAtBM","sourcesContent":["import { CategoriesActionTypes } from '../../actions';\nimport Category from '../../models/Category';\nimport { CategoriesState } from '../../models/States';\n\ninterface CategoriesAction {\n    type: string;\n    payload: Category[];\n    error: string;\n}\n\nexport const initialState: CategoriesState = {\n    pending: false,\n    categories: [],\n    error: ''\n};\n\nexport const categoriesReducer = (state = initialState, action: CategoriesAction) => {\n    switch(action.type) {\n        case CategoriesActionTypes.FETCH_CATEGORIES_PENDING:\n            return {\n                ...state,\n                pending: true\n            }\n        case CategoriesActionTypes.FETCH_CATEGORIES_SUCCESS:\n            return {\n                ...state,\n                pending: false,\n                categories: action.payload\n            }\n        case CategoriesActionTypes.FETCH_CATEGORIES_ERROR:\n            return {\n                ...state,\n                pending: false,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}