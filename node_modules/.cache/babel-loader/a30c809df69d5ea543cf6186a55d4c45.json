{"ast":null,"code":"import _defineProperty from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { JobActionTypes } from '../../actions';\nexport const initialState = {\n  pending: false,\n  job: {\n    id: 0,\n    title: '',\n    description: '',\n    company: {\n      id: 0,\n      name: '',\n      description: '',\n      establishmentDate: '',\n      profileImage: '',\n      website: '',\n      email: '',\n      phone: '',\n      streetAddress: '',\n      city: '',\n      province: '',\n      country: '',\n      createdOn: '',\n      updatedOn: ''\n    },\n    isActive: 1,\n    postedBy: '',\n    createdOn: '',\n    updatedOn: '',\n    category: {\n      id: 0,\n      name: '',\n      description: '',\n      icon: 'bars',\n      total: 0\n    },\n    meta: {\n      type: '',\n      salary: ''\n    },\n    skills: []\n  },\n  error: ''\n};\nexport const jobReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case JobActionTypes.FETCH_JOB_PENDING:\n      return _objectSpread({}, state, {\n        pending: true\n      });\n\n    case JobActionTypes.FETCH_JOB_SUCCESS:\n      return _objectSpread({}, state, {\n        pending: false,\n        job: action.payload\n      });\n\n    case JobActionTypes.FETCH_JOB_ERROR:\n      return _objectSpread({}, state, {\n        pending: false,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/app/src/reducers/job/index.tsx"],"names":["JobActionTypes","initialState","pending","job","id","title","description","company","name","establishmentDate","profileImage","website","email","phone","streetAddress","city","province","country","createdOn","updatedOn","isActive","postedBy","category","icon","total","meta","type","salary","skills","error","jobReducer","state","action","FETCH_JOB_PENDING","FETCH_JOB_SUCCESS","payload","FETCH_JOB_ERROR"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AAUA,OAAO,MAAMC,YAAsB,GAAG;AAClCC,EAAAA,OAAO,EAAE,KADyB;AAElCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,EAAE,EAAE,CADH;AAEDC,IAAAA,KAAK,EAAE,EAFN;AAGDC,IAAAA,WAAW,EAAE,EAHZ;AAIDC,IAAAA,OAAO,EAAE;AACLH,MAAAA,EAAE,EAAE,CADC;AAELI,MAAAA,IAAI,EAAE,EAFD;AAGLF,MAAAA,WAAW,EAAE,EAHR;AAILG,MAAAA,iBAAiB,EAAE,EAJd;AAKLC,MAAAA,YAAY,EAAE,EALT;AAMLC,MAAAA,OAAO,EAAE,EANJ;AAOLC,MAAAA,KAAK,EAAE,EAPF;AAQLC,MAAAA,KAAK,EAAE,EARF;AASLC,MAAAA,aAAa,EAAE,EATV;AAULC,MAAAA,IAAI,EAAE,EAVD;AAWLC,MAAAA,QAAQ,EAAE,EAXL;AAYLC,MAAAA,OAAO,EAAE,EAZJ;AAaLC,MAAAA,SAAS,EAAE,EAbN;AAcLC,MAAAA,SAAS,EAAE;AAdN,KAJR;AAoBDC,IAAAA,QAAQ,EAAE,CApBT;AAqBDC,IAAAA,QAAQ,EAAE,EArBT;AAsBDH,IAAAA,SAAS,EAAE,EAtBV;AAuBDC,IAAAA,SAAS,EAAE,EAvBV;AAwBDG,IAAAA,QAAQ,EAAE;AACNlB,MAAAA,EAAE,EAAE,CADE;AAENI,MAAAA,IAAI,EAAE,EAFA;AAGNF,MAAAA,WAAW,EAAE,EAHP;AAINiB,MAAAA,IAAI,EAAE,MAJA;AAKNC,MAAAA,KAAK,EAAE;AALD,KAxBT;AA+BDC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE,EADJ;AAEFC,MAAAA,MAAM,EAAE;AAFN,KA/BL;AAmCDC,IAAAA,MAAM,EAAE;AAnCP,GAF6B;AAuClCC,EAAAA,KAAK,EAAE;AAvC2B,CAA/B;AA0CP,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAG9B,YAAT,EAAuB+B,MAAvB,KAA6C;AACnE,UAAOA,MAAM,CAACN,IAAd;AACI,SAAK1B,cAAc,CAACiC,iBAApB;AACI,+BACOF,KADP;AAEI7B,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKF,cAAc,CAACkC,iBAApB;AACI,+BACOH,KADP;AAEI7B,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,GAAG,EAAE6B,MAAM,CAACG;AAHhB;;AAKJ,SAAKnC,cAAc,CAACoC,eAApB;AACI,+BACOL,KADP;AAEI7B,QAAAA,OAAO,EAAE,KAFb;AAGI2B,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHlB;;AAKJ;AACI,aAAOE,KAAP;AAnBR;AAqBH,CAtBM","sourcesContent":["import { JobActionTypes } from '../../actions';\nimport Job from '../../models/Job';\nimport { JobState } from '../../models/States';\n\ninterface JobAction {\n    type: string;\n    payload: Job;\n    error: string;\n}\n\nexport const initialState: JobState = {\n    pending: false,\n    job: {\n        id: 0,\n        title: '',\n        description: '',\n        company: {\n            id: 0,\n            name: '',\n            description: '',\n            establishmentDate: '',\n            profileImage: '',\n            website: '',\n            email: '',\n            phone: '',\n            streetAddress: '',\n            city: '',\n            province: '',\n            country: '',\n            createdOn: '',\n            updatedOn: '',\n        },\n        isActive: 1,\n        postedBy: '',\n        createdOn: '',\n        updatedOn: '',\n        category: {\n            id: 0,\n            name: '',\n            description: '',\n            icon: 'bars',\n            total: 0,\n        },\n        meta: {\n            type: '',\n            salary: '',\n        },\n        skills: []\n    },\n    error: ''\n};\n\nexport const jobReducer = (state = initialState, action: JobAction) => {\n    switch(action.type) {\n        case JobActionTypes.FETCH_JOB_PENDING:\n            return {\n                ...state,\n                pending: true\n            }\n        case JobActionTypes.FETCH_JOB_SUCCESS:\n            return {\n                ...state,\n                pending: false,\n                job: action.payload\n            }\n        case JobActionTypes.FETCH_JOB_ERROR:\n            return {\n                ...state,\n                pending: false,\n                error: action.error\n            }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}