{"ast":null,"code":"import axios from 'axios';\nexport let CategoriesActionTypes;\n\n(function (CategoriesActionTypes) {\n  CategoriesActionTypes[\"FETCH_CATEGORIES_PENDING\"] = \"FETCH_CATEGORIES_PENDING\";\n  CategoriesActionTypes[\"FETCH_CATEGORIES_SUCCESS\"] = \"FETCH_CATEGORIES_SUCCESS\";\n  CategoriesActionTypes[\"FETCH_CATEGORIES_ERROR\"] = \"FETCH_CATEGORIES_ERROR\";\n})(CategoriesActionTypes || (CategoriesActionTypes = {}));\n\nconst fetchCategoriesPending = () => {\n  return {\n    type: CategoriesActionTypes.FETCH_CATEGORIES_PENDING\n  };\n};\n\nconst fetchCategoriesSuccess = categories => {\n  return {\n    type: CategoriesActionTypes.FETCH_CATEGORIES_SUCCESS,\n    payload: categories\n  };\n};\n\nconst fetchCategoriesError = error => {\n  return {\n    type: CategoriesActionTypes.FETCH_CATEGORIES_ERROR,\n    error\n  };\n};\n\nexport const fetchCategories = () => async dispatch => {\n  dispatch(fetchCategoriesPending());\n\n  try {\n    const categories = await axios.get('http://localhost:3030/categories');\n    setTimeout(() => {\n      dispatch(fetchCategoriesSuccess(categories.data));\n    }, 1000);\n  } catch (error) {\n    dispatch(fetchCategoriesError(error));\n  }\n};","map":{"version":3,"sources":["/jobs-portal/src/actions/categories/index.tsx"],"names":["axios","CategoriesActionTypes","fetchCategoriesPending","type","FETCH_CATEGORIES_PENDING","fetchCategoriesSuccess","categories","FETCH_CATEGORIES_SUCCESS","payload","fetchCategoriesError","error","FETCH_CATEGORIES_ERROR","fetchCategories","dispatch","get","setTimeout","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,WAAYC,qBAAZ;;WAAYA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;AAAAA,EAAAA,qB;GAAAA,qB,KAAAA,qB;;AAoBZ,MAAMC,sBAAsB,GAAG,MAAyB;AACpD,SAAO;AACHC,IAAAA,IAAI,EAAEF,qBAAqB,CAACG;AADzB,GAAP;AAGH,CAJD;;AAMA,MAAMC,sBAAsB,GAAIC,UAAD,IAA+C;AAC1E,SAAO;AACHH,IAAAA,IAAI,EAAEF,qBAAqB,CAACM,wBADzB;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALD;;AAOA,MAAMG,oBAAoB,GAAIC,KAAD,IAAoC;AAC7D,SAAO;AACHP,IAAAA,IAAI,EAAEF,qBAAqB,CAACU,sBADzB;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,OAAO,MAAME,eAAe,GAAG,MAAM,MAAOC,QAAP,IAA8B;AAC/DA,EAAAA,QAAQ,CAACX,sBAAsB,EAAvB,CAAR;;AACA,MAAI;AACA,UAAMI,UAAU,GAAG,MAAMN,KAAK,CAACc,GAAN,CAAU,kCAAV,CAAzB;AACAC,IAAAA,UAAU,CAAC,MAAM;AACbF,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,UAAU,CAACU,IAAZ,CAAvB,CAAR;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GALD,CAKE,OAAMN,KAAN,EAAa;AACXG,IAAAA,QAAQ,CAACJ,oBAAoB,CAACC,KAAD,CAArB,CAAR;AACH;AACJ,CAVM","sourcesContent":["import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport Category from '../../models/Category';\n\nexport enum CategoriesActionTypes {\n    FETCH_CATEGORIES_PENDING = 'FETCH_CATEGORIES_PENDING',\n    FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS',\n    FETCH_CATEGORIES_ERROR = 'FETCH_CATEGORIES_ERROR'\n}\n\ninterface CategoriesPending {\n    type: typeof CategoriesActionTypes.FETCH_CATEGORIES_PENDING;\n}\n\ninterface CategoriesSuccess {\n    type: typeof CategoriesActionTypes.FETCH_CATEGORIES_SUCCESS;\n    payload: Category[]\n}\n\ninterface CategoriesError {\n    type: typeof CategoriesActionTypes.FETCH_CATEGORIES_ERROR;\n    error: string;\n}\n\nconst fetchCategoriesPending = (): CategoriesPending => {\n    return {\n        type: CategoriesActionTypes.FETCH_CATEGORIES_PENDING\n    }\n}\n\nconst fetchCategoriesSuccess = (categories: Category[]): CategoriesSuccess => {\n    return {\n        type: CategoriesActionTypes.FETCH_CATEGORIES_SUCCESS,\n        payload: categories\n    }\n}\n\nconst fetchCategoriesError = (error: string): CategoriesError => {\n    return {\n        type: CategoriesActionTypes.FETCH_CATEGORIES_ERROR,\n        error\n    }\n}\n\nexport const fetchCategories = () => async (dispatch: Dispatch) => {\n    dispatch(fetchCategoriesPending());\n    try {\n        const categories = await axios.get('http://localhost:3030/categories');\n        setTimeout(() => {\n            dispatch(fetchCategoriesSuccess(categories.data));\n        }, 1000);\n    } catch(error) {\n        dispatch(fetchCategoriesError(error));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}