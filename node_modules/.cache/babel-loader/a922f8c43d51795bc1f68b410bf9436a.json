{"ast":null,"code":"var _jsxFileName = \"/jobs-portal/src/components/JobItem/index.tsx\";\nimport React from 'react';\nimport * as moment from 'moment';\nimport { Card, Row, Col, Badge } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBuilding } from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from 'react-router-dom';\n\nconst JobItem = props => {\n  const job = props.job,\n        isListView = props.isListView;\n  return React.createElement(Col, {\n    lg: isListView ? 12 : 4,\n    className: \"job-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"job-item__body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Col, {\n    lg: isListView ? 6 : 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    as: NavLink,\n    to: \"/jobs/\".concat(job.id),\n    className: \"job-item__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, job.title), React.createElement(Card.Subtitle, {\n    className: \"job-item__company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: faBuilding,\n    size: \"sm\",\n    className: \"job-item__company--icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), \" \", job.company.name)), React.createElement(Col, {\n    lg: isListView ? 3 : 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Card.Text, {\n    className: \"job-item__type-location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, job.meta && job.meta.type, \" \", job.meta && job.meta.type && React.createElement(\"span\", {\n    className: \"job-item__type-location--in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"in\"), \" \", job.company.city, \",\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"job-item__post-time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, moment.utc(job.createdOn).startOf('day').fromNow()))), React.createElement(Col, {\n    lg: isListView ? 3 : 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Card.Text, {\n    className: \"job-item__skills\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, job.skills && job.skills.map(skill => {\n    return React.createElement(Badge, {\n      key: skill.id,\n      pill: true,\n      variant: \"secondary\",\n      className: \"job-item__skills--item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, skill.skill);\n  }))))));\n};\n\nexport default JobItem;","map":{"version":3,"sources":["/jobs-portal/src/components/JobItem/index.tsx"],"names":["React","moment","Card","Row","Col","Badge","FontAwesomeIcon","faBuilding","NavLink","JobItem","props","job","isListView","id","title","company","name","meta","type","city","utc","createdOn","startOf","fromNow","skills","map","skill"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as moment from 'moment';\nimport { Card, Row, Col, Badge } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBuilding } from '@fortawesome/free-solid-svg-icons';\nimport Job from '../../models/Job';\nimport { NavLink } from 'react-router-dom';\n\ninterface JIProps {\n    job: Job\n    isListView: boolean;\n}\n\nconst JobItem: React.FC<JIProps> = (props: JIProps) => {\n    const { job, isListView } = props;\n    return (\n        <Col lg={isListView ? 12 : 4} className=\"job-item\">\n            <Card className=\"job-item__body\">\n                <Row>\n                    <Col lg={isListView ? 6 : 12}>\n                        <Card.Title as={NavLink} to={`/jobs/${job.id}`} className=\"job-item__title\">{job.title}</Card.Title>\n                        <Card.Subtitle className=\"job-item__company\">\n                            <FontAwesomeIcon icon={faBuilding} size=\"sm\" className=\"job-item__company--icon\" /> {job.company.name}\n                        </Card.Subtitle>\n                    </Col>\n                    <Col lg={isListView ? 3 : 12}>\n                        <Card.Text className=\"job-item__type-location\">\n    {job.meta && job.meta.type} {job.meta && job.meta.type && <span className=\"job-item__type-location--in\">in</span>} {job.company.city},<br /><span className=\"job-item__post-time\">{moment.utc(job.createdOn).startOf('day').fromNow()}</span>\n                        </Card.Text>\n                    </Col>\n                    <Col lg={isListView ? 3 : 12}>\n                    <Card.Text className=\"job-item__skills\">\n                        {job.skills && job.skills.map((skill) => {\n                            return <Badge key={skill.id} pill variant=\"secondary\" className=\"job-item__skills--item\">{skill.skill}</Badge>\n                        })}\n                    </Card.Text>\n                    </Col>\n                </Row>\n            </Card>\n        </Col>\n    )\n}\n\nexport default JobItem;\n"]},"metadata":{},"sourceType":"module"}